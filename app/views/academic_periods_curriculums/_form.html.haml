= form_for(@academic_period_curriculum, :url => admin_academic_period_curriculums_path(@academic_period)) do |f|
  = f.error_messages
  
  .clearfix
    = f.label :curriculum_id, nil, :class => :required
    .input
      = select_tag :course_id, options_from_collection_for_select(Course.all, :id, :name, @academic_period_curriculum.curriculum_id ? @academic_period_curriculum.curriculum_id : nil), :include_blank => true
      = f.collection_select :curriculum_id, [], nil, :include_blank => true
  
  .clearfix
    = label_tag :professor_ids, (t 'Professors'), :class => :required
    .input
      = select_tag :professor_ids, nil, {:multiple => true}    
  
  .clearfix
    = f.label :code, nil, :class => 'required'
    .input
      = f.text_field :code, :required => 'required'
  
  .actions
    = f.submit nil, :class => 'btn primary'
    
:javascript
  $(document).ready(function() {
    function update_curriculums() {
      $('#academic_period_curriculum_curriculum_id option').remove()
      $.ajax({
        url: "#{admin_courses_path}/" + $('#course_id').val() + '/curriculums.json', 
        success: function(data) {
          $(data).each(function(i, item) {
            $('#academic_period_curriculum_curriculum_id').append('<option value="' + item.id + '">' + item.name + '</option>')
          })
        }, 
        complete: function() {
          $('#academic_period_curriculum_curriculum_id').val($('#academic_period_curriculum_curriculum_id option:first').val())
        }
      })
    }
    
    $('#course_id').change(function() {
      update_curriculums()
    });
    
    Application.autocomplete('professor_ids', "#{professors_path}.js", "#{t 'Remove'}", true)
  });